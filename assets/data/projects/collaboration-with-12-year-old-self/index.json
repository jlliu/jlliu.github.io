{"hash":"0e8c36a023b00bd685fb485edc4af9e38736f793","data":null,"context":{"id":"1txz76jlqY8Sc2K6guKu42","description":"## performance\n\n*A collaboration with my 12 year-old-self*  is a live-drawing performance piece. While I draw, machine learning models trained on my childhood art continuously transfer those styles onto my live drawings, allowing me to create artifacts \"in collaboration\" with my younger self.\n\n<iframe src=\"https://player.vimeo.com/video/306615366\" width=\"640\" height=\"480\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\n<div class=\"caption\">Performed at the Museum of the Moving Image on December 7, 2018.</div>\n\n## background\n\n  I remember the age of 11-12 (during the years 2007-2008) as one of the most artistically prolific periods of my life. As a kid, I loved to draw - and specifically drew a lot of digital fanart of my favorite animated shows, like Avatar: The Last Airbender and Naruto. \n\n<br><br>\n![anime-art-collage](//images.ctfassets.net/t9p4c9x03bar/4Pk4EjLn7W0iwACYYMSoss/f060d0e3d4547eaf47c183e813d8f7a4/anime-art-collage.png)\n<div class=\"caption\">Here are some gems from around 2007-2008.</div><br><br>\n\nI drew daily and built my first ever internet friendships through online fanart communities. Drawing was something I did for fun, on my own time, and completely because it made me happy.\n\nI grew out of that stage pretty quickly. As I got older, I started to tailor my creative energy towards \"serious\" goals. In high school, I focused on building a more portfolio of traditional paintings to apply to college with. While in engineering college, I figured I'd have a tech career, so I focused on projects that would help me be employable, like developing web-apps. \n\nIn this piece, I wanted to explore a dialogue between my current and younger self (and implicitly, the relationship between my current and past attitudes towards creating art), and explore ways of honoring and reconnecting with a younger version of myself.\n\n## process\n\n#### collecting the data\n\nI'm sort of a hoarder of personal data, and this is one case where I'm actually grateful for that. After I switched away from my childhood desktop computer onto my first laptop, I transferred the contents of my computer onto an external hard drive - which I also conveniently had on hand. Previous me also organized all of my art into a nice folder called \"Artwork\". Thanks, younger me!\n\n#### training the models\n\nThis project wouldn't have gotten to where it was without the help of [ml5.js](https://ml5js.org/), which builds upon tensorflow.js to make doing machine learning things really easy and accessible on the web.\n\nI used ml5's style transfer [example code](https://ml5js.org/docs/style-transfer-image-example) as a base. They provide an easy interface for transferring the style of one image (on which you have to train a model) onto a new image. In this case, the styles I wanted to transfer were from my childhood drawings, and the images that would <i>receive</i> the styles are my live drawings.\n\nI started following [this tutorial](https://github.com/ml5js/training-styletransfer) on training your own models for style transfer, but got stuck trying to figure out using a remote GPU to do the training. Luckily, an instructor at my grad program pointed me to a helpful [tutorial](https://github.com/yining1023/styleTransfer_spell) she wrote that explains how to run the style-transfer training with a service called [Spell](https://spell.run/), which makes running heavy-duty computing jobs a lot easier using just a few commands. Spell does cost money to use, but gives new users $100 in free credits. I was able to train 6 styles without going over the $100 free credits.\n\n\n\n#### developing a drawing interface for performance\n\nTraining the models on my own drawings took a while to get started, so I simultaneously worked on an interface on which I can live draw in a performance setting.\n\n##### VISUAL THEME\n\nBecause this whole project was a story about my pre-teen self, I wanted to replicate a desktop environment from that era. My family didn't grow up as an Apple family - we had exclusively Windows computers. My first personal computer - one that I had in my bedroom - was a desktop computer with Windows Vista. \"Replicating\" this environment involved scouring the internet for screenshots of this now obsolete UI, and positioning these elements together in a webpage.\n\n![desktop-screenshot](//images.ctfassets.net/t9p4c9x03bar/1gR1sjJYPmec0uGuq0w2Wq/e0d267ee02db921f79531ba808c07445/desktop-screenshot.png)\n<div class=\"caption\">This looks like a Windows Vista desktop but is actually just a web-based mockup made with images. Note how there are no open window previews shown in the bottom bar.</div>\n\nTo provide some visual metaphors for the style transfer going on, I used a mock MS Paint window to stage my live drawing, a mock image preview environment to reference my old drawings, and a mock terminal window to display the \"collaborative\" output between my live drawing and my childhood art.\n\n##### DRAWING\n\nTo create a simple drawing functionality, I used [p5.js](https://p5js.org/) canvas and a quick [tutorial](http://coursescript.com/notes/interactivecomputing/drawingapp/index.html).\n\n##### APPLYING STYLE TRANSFER\n\nNext, I worked on getting style to transfer onto the canvas from a machine learning model. To do this, I captured the canvas element as a JPEG image and fed the image to the model, which then outputs a version of the drawing with the appropriate style transferred.\n\nTo get a smooth, continuous style-transfer effect while drawing, I needed to do this process of capturing the image and feeding it to the model many times. My first run at this was not super successful - I didn't realize how much computational time it took to apply style transfer on an image, especially if the image was bigger than 100px. \n\nThere were a tricks I ended up using to make the style transfer work and look better as a \"live\" effect:\n\n- I fed __small image sizes__ into the models. The smallest sizes I use are 80px by 80px JPEG images. It wouldn't be very interesting to be drawing on an 80px canvas, so I took a normal sized canvas and scaled it down once I captured it as an image.\n- I __tracked when the user was actively drawing__ (i.e., changing the state of the canvas), and only ran the periodic style transfer updates during the active drawing states.\n- I __alternated between high and low resolution style transfer__ when appropriate. Feeding 80px by 80px size images resulted in some blurry and low-res output. The style transfer images that are more interesting to look at are from higher resolution images. So while the user is drawing, I made the system do style transfer on lower res images, and only when the user stops drawing, the system does a more high resolution style transfer (we can afford to wait for that to happen, since we're not actively drawing). \n- To make this transition between low-res and high-res style transfer smoother, the style transfer process cycles through a __gradient of image resolutions__.\n\n\n## try it out\n\n### the performance version\n\nThe code I wrote for the performance is not really easy to learn as a tool for other people and was written specifically to make it easy to perform a story, but if you're interested, [here it is live](https://jackieis.online/collaboration-12-year-old-self/) and here's the [source code](https://github.com/jlliu/collaboration-12-year-old-self), with a few tips:\n1. First press the spacebar to \"enter the Vista environment\".\n2. Your browser screen size should be about 60% for optimal viewing. You might need to toggle it a bit.\n3. Double click on the MS paint icon to open Paint. You can hit the brush tool and the eraser tool only.\n4. Double click on the \"Childhood Artwork\" folder and then anywhere on the window that pops up to go into the image previews of my old art.\n5. To run style transfer, type anything into the \"terminal\" in the center and press enter. Anything you draw should now be style-transfered in the terminal.\n7. the ~/` key on your keyboard should trigger the audio for my performance.\n\n### an easier-to-use version\n\nI've also modified the code written for the performance into a more convenient tool for other people to interact with! Try drawing below or going directly to [the app](https://collaboration-with-year-old-self-app.glitch.me \"Link to App\") and applying styles from my childhood art. You might need to be a bit patient while drawing - the style transfer might be laggy, so drawing slowly is recommended. __Works best in Chrome on desktop.__\n\nNot loading below? [Explore the app directly](https://collaboration-with-year-old-self-app.glitch.me \"Link to App\") \n\n<!-- Copy and Paste Me -->\n<div class=\"glitch-embed-wrap\" style=\"height: 420px; width: 100%;\">\n  <iframe\n    src=\"https://glitch.com/embed/#!/embed/collaboration-with-year-old-self-app?path=index.html&previewSize=100&attributionHidden=true\"\n    title=\"collaboration-with-year-old-self-app on Glitch\"\n    allow=\"geolocation; microphone; camera; midi; vr; encrypted-media\"\n    style=\"height: 100%; width: 100%; border: 0;\">\n  </iframe>\n</div>\n","shortDescription":"Combining live drawing with my childhood artwork using machine learning.","title":"a collaboration with my 12-year-old-self","coverphoto":"//images.ctfassets.net/t9p4c9x03bar/76FqIZzgSAqKkeyI6kwGIC/30b8423b7d7bc0af138c9bd2a8f75e66/drawing-performance.png","timePeriod":"Fall 2018","workType":"Drawing performance / ML experiment"}}